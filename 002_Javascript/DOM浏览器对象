浏览器对象:
		window对象不但充当全局作用域,而且表示浏览器窗口.
		window对象有innerWidth和innerHeight属性,可以获取浏览器窗口的内部宽度和高度.内部高度是指除去菜单栏 工具栏 边框等占位元素后,用于显示页面的净宽高.
		
		alert('window inner size:'+window.innerWidth+' x '+window.innerHeight)
		
		对应的还有outerWidth和outHeight属性,可以获取浏览器窗口的整个宽高.
		
		navigator对象表示浏览器的信息,常用的属性包括:
			.navigator.appName:浏览器名称;
			.navigator.appVersion:浏览器版本
			.navigator.language:浏览器设置语言
			.navigator.platform:操作系统类型
			.navigator.userAgent:浏览器设定的User-Agent
	
	screen-表示屏幕的信息,常用的属性有:
		screen.width:屏幕宽度,以像素为单位
		screen.height:屏幕高度,以像素为单位
		screen.colorDepth:返回颜色位数,如8 16 24.
		
	location对象表示当前页面的URL信息,例如一个完整的URL:
	
	document对象表示当前页面,由于HTML在浏览器中以DOM形式表示为数形结构,document对象就是整个DOM数的根节点.
	
	document.title属性是从HTML文档中的<title>xxx</title>读取的,但是可以动态改变:
	
	要查找DOM数的某个节点,需要从document对象开始查找.常用的查找是根据ID和Tag Name.
	
	document对象提供的getElementById()和getElementsByTagName()可以按ID获得一个DOM节点和按tag名称获得一组DOM节点:
	
	document对象还有一个cookie属性,可以获取当前页面的Cookie.
	document.cookie;
	
	由于JavaScript能读取到页面的Cookie,而用户的登录信息通常也存在Cookie中,这就造成了巨大的安全隐患,这是因为在HTML页面中引入第三方的JavaScript代码是允许的:
	
	如果引入的第三方的JavaScript中存在恶意代码,则原网站的用户登录信息将被泄露.
	
	为了解决这个问题,服务器在设置Cookie时可以使用httpOnly,设定了httpOnly的Cookie将不能被JavaScript读取,这个行为由浏览器实现,主流浏览器均支持httpOnly选项,
	
	history对象保存了浏览器的历史记录,JavaScript可以调用history对象的back()或forward(),相当与用户点击了浏览器的"后退"或者"前进"按钮.
	
	这个对象属于历史遗留对象,对于现代Web页面来说,由于大量使用Ajax和页面交互,简单粗暴地调用history.back()可能会让用户感到非常愤怒.
	任何情况,都不应该使用history这个对象了
	
