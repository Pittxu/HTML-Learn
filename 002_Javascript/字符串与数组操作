模板字符串:		
	var name = '小明';
	var age = 20;
	alert(`你好, ${name}, 你今年${age}岁了!`);
	 
	需要特别注意的是,字符串是不可变的,若果对字符串的某个索引赋值,不会有任何错误,但是,也没有任何效果.
	
	字符串方法:
		1.toUpperCase()把一个字符串全部变为大写.
		
		2.toLowerCase()把一个字符串全部变为小写
		
		3.indexOf()搜索指定字符出现的位置
		
		4.substring()返回指定索引区间的子串
		
	数组.直接用[]定义数组
		var arr = [1, 2, 3];
	arr.length; // 3
	arr.length = 6;
	arr; // arr变为[1, 2, 3, undefined, undefined, undefined]
	arr.length = 2;
	arr; // arr变为[1, 2]
	 
	修改数组:
			var arr=['A','B','C'];
			arr[1]=99;
			arr;//现在变为['A',99,'C']
	
			var arr = [1, 2, 3];
			arr[5] = 'x';
			arr; // arr变为[1, 2, 3, undefined, undefined, 'x']
	indexof()
	
	slice()切割字符串,起止参数包括开始索引,不包括结束索引
	var arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];
	arr.slice(0, 3); // 从索引0开始，到索引3结束，但不包括索引3: ['A', 'B', 'C']
	arr.slice(3); // 从索引3开始到结束: ['D', 'E', 'F', 'G']
	 
	push()向数组的末尾添加若干元素
	arr.push('A');//添加字符'A'到arr末尾返回arr的长度
	
	pop()把数组最后一个元素删除掉
	arr.pop();//删除arr最后一个数组
	
	unshift()向数组的头部添加元素
	
	shift()把数组头部的元素删除
	
	arr.unshift('A','B');//返回arr新的长度
	
	arr.shift();删除第一个元素
	
	sort()可以对当前arr进行排序,它会直接修改当前arr
	
	var arr=['B','C','A']
	arr.sort();
	arr;//['A','B','C']
	
	
	reverse()把整个arr数组反转
	
	var arr=['one','two','three'];
	arr.reverse();
	arr;//['three','two','one']
	
	splice()从指定的索引位置开始删除若干元素,然后从该位置添加若干元素
	var arr = ['Microsoft', 'Apple', 'Yahoo', 'AOL', 'Excite', 'Oracle'];
	
	// 从索引2开始删除3个元素,然后再添加两个元素:
	arr.splice(2, 3, 'Google', 'Facebook'); // 返回删除的元素 ['Yahoo', 'AOL', 'Excite']
	arr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']
	
	// 只删除,不添加:
	arr.splice(2, 2); // ['Google', 'Facebook']
	arr; // ['Microsoft', 'Apple', 'Oracle']
	
	// 只添加,不删除:
	arr.splice(2, 0, 'Google', 'Facebook'); // 返回[],因为没有删除任何元素
	arr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']

concat()方法把当前的字符串与另一个字符串连接在一起,返回一个新的字符串
	
	var arr = ['A', 'B', 'C'];
	var added = arr.concat([1, 2, 3]);
	added; // ['A', 'B', 'C', 1, 2, 3]
	arr; // ['A', 'B', 'C']
	
	注意:concat()方法可以接收任意个元素和数组,并且自动把字符串拆开,然后全部添加到新的数组里:
		var arr=['A','B','C'];
		arr.concat(1,2,[3,4]);//['A','B','C','1','2','3','4'];
		
		join()方法把当前的每一个元素用指定的字符串连接起来,然后返回连接后的字符串
		
		var arr=['A','B','C','1','2'];
		arr.join('-');//A-B-C-1-2
		
		多维数组:
		var arr=[[1,2,3],[400,500,600],'-'];
